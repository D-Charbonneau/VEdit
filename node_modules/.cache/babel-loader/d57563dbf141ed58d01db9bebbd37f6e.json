{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useForm(defaultValues, onSuccess) {\n  _s();\n\n  const [formValues, setFormValues] = useState(defaultValues);\n  return {\n    formProps: {\n      onSubmit: () => {\n        onSuccess(formValues);\n      },\n      getFieldProps: fieldName => {\n        return {\n          onChange: _ref => {\n            let {\n              target: {\n                name,\n                value\n              }\n            } = _ref;\n            setFormValues({ ...formValues,\n              [name]: value\n            });\n          },\n          name: fieldName\n        };\n      }\n    }\n  };\n}\n\n_s(useForm, \"qHqjvpwQwhBFUta/2bL8yfkaeqM=\");","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/hooks/useForm.ts"],"names":["useState","useForm","defaultValues","onSuccess","formValues","setFormValues","formProps","onSubmit","getFieldProps","fieldName","onChange","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,OAAT,CAAoBC,aAApB,EAAsCC,SAAtC,EAAsE;AAAA;;AACzE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAIE,aAAJ,CAA5C;AACA,SAAO;AACHI,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAE,MAAM;AACZJ,QAAAA,SAAS,CAACC,UAAD,CAAT;AACH,OAHM;AAIPI,MAAAA,aAAa,EAAGC,SAAD,IAAuB;AAClC,eAAO;AACHC,UAAAA,QAAQ,EAAE,QAAsC;AAAA,gBAArC;AAAEC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,IAAF;AAAQC,gBAAAA;AAAR;AAAV,aAAqC;AAC5CR,YAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,eAACQ,IAAD,GAAQC;AAAzB,aAAD,CAAb;AACH,WAHE;AAIHD,UAAAA,IAAI,EAAEH;AAJH,SAAP;AAMH;AAXM;AADR,GAAP;AAeH;;GAjBeR,O","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useForm<T>(defaultValues: T, onSuccess: (values: T) => void) {\r\n    const [formValues, setFormValues] = useState<T>(defaultValues);\r\n    return {\r\n        formProps: {\r\n            onSubmit: () => {\r\n                onSuccess(formValues);\r\n            },\r\n            getFieldProps: (fieldName: string) => {\r\n                return {\r\n                    onChange: ({ target: { name, value } }: any) => {\r\n                        setFormValues({ ...formValues, [name]: value })\r\n                    },\r\n                    name: fieldName\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}