{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\boome\\\\Desktop\\\\VEdit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _objectWithoutProperties from\"C:\\\\Users\\\\boome\\\\Desktop\\\\VEdit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectWithoutProperties.js\";import _classCallCheck from\"C:\\\\Users\\\\boome\\\\Desktop\\\\VEdit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\boome\\\\Desktop\\\\VEdit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var _excluded=[\"password\",\"confirmPassword\"];import{v4 as uuidv4}from'uuid';export function checkPassword(pass,confirm){return /\\S/.test(pass)&&/\\d/.test(pass)&&/[a-z]/i.test(pass)&&pass.length>7&&pass===confirm;}var API=/*#__PURE__*/function(){function API(){_classCallCheck(this,API);}_createClass(API,null,[{key:\"signUp\",value:function signUp(formValues){var userID=uuidv4();var password=formValues.password,confirmPassword=formValues.confirmPassword,user=_objectWithoutProperties(formValues,_excluded);if(user.username&&user.email&&password&&checkPassword(password,confirmPassword)){var grabData=window.localStorage.getItem(\"userData\");if(!grabData){grabData=JSON.stringify([]);}var oldData=JSON.parse(grabData);var hashedPassword=btoa(password+userID);oldData.push(_objectSpread(_objectSpread({id:userID},user),{},{pfp:process.env.PUBLIC_URL+'/images/defaultpfp.png',pass:hashedPassword,projects:[]}));window.localStorage.setItem(\"userData\",JSON.stringify(oldData));return new Promise(function(resolve,reject){setTimeout(function(){resolve({data:user,status:\"success\"});},Math.random()*500+1000);});}else if(!user.username){return new Promise(function(resolve,reject){setTimeout(function(){resolve({data:\"Missing Username\",status:\"error\"});},Math.random()*500+1000);});}else if(!user.email){return new Promise(function(resolve,reject){setTimeout(function(){resolve({data:\"Missing Email\",status:\"error\"});},Math.random()*500+1000);});}return new Promise(function(resolve,reject){setTimeout(function(){resolve({data:\"Invalid Password. (8+ characters, no spaces, at least 1 number and 1 letter)\",status:\"error\"});},Math.random()*500+1000);});}},{key:\"login\",value:function login(username,password){return new Promise(function(resolve,reject){var users;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}var _loop=function _loop(i){if(users[i].username===username&&users[i].pass===btoa(password+users[i].id)){setTimeout(function(){resolve({data:users[i],status:\"success\"});},Math.random()*500+1000);}};for(var i=0;i<users.length;i++){_loop(i);}setTimeout(function(){resolve({data:{message:\"Could not find user or invalid credentials\"},status:\"error\"});},Math.random()*500+1000);});}},{key:\"changeUsername\",value:function changeUsername(oldPass,username,confirmUsername){return new Promise(function(resolve,reject){if(username===confirmUsername){var users;var found=-1;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}for(var i=0;i<users.length;i++){if(users[i].pass===oldPass){found=i;break;}}if(found===-1){setTimeout(function(){resolve({data:{message:\"Could not find user\"},status:\"error\"});},Math.random()*500+1000);}else{users[found].username=username;window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}}else{setTimeout(function(){resolve({data:{message:\"Usernames do not match\"},status:\"error\"});},Math.random()*500+1000);}});}},{key:\"changePassword\",value:function changePassword(uuid,oldPassword,password,confirmPassword){return new Promise(function(resolve,reject){if(checkPassword(password,confirmPassword)){var users;var found=-1;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}for(var i=0;i<users.length;i++){if(users[i].id===uuid){found=i;break;}}if(found===-1){setTimeout(function(){resolve({data:{message:\"Could not find user\"},status:\"error\"});},Math.random()*500+1000);}else{if(btoa(oldPassword+uuid)===users[found].pass){users[found].pass=btoa(password+uuid);window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}setTimeout(function(){resolve({data:{message:\"Could not change password\"},status:\"error\"});},Math.random()*500+1000);}}else{setTimeout(function(){resolve({data:{message:\"Password does not match confirmation.\"},status:\"error\"});},Math.random()*500+1000);}});}},{key:\"changePFP\",value:function changePFP(id,link){return new Promise(function(resolve,reject){var users;var found=-1;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}for(var i=0;i<users.length;i++){if(users[i].id===id){found=i;break;}}if(found===-1){setTimeout(function(){resolve({data:{message:\"Could not find user\"},status:\"error\"});},Math.random()*500+1000);}else{console.log(link);if(link===\"\"){users[found].pfp=process.env.PUBLIC_URL+'/images/defaultpfp.png';window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}else{users[found].pfp=link;window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}}});}},{key:\"newProject\",value:function newProject(id,title){return new Promise(function(resolve,reject){var users;var found=-1;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}for(var i=0;i<users.length;i++){if(users[i].id===id){found=i;break;}}if(found===-1){setTimeout(function(){resolve({data:{message:\"Could not find user\"},status:\"error\"});},Math.random()*500+1000);}else{if(title){users[found].projects.unshift({title:title});window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}else{setTimeout(function(){resolve({data:{message:\"Missing title\"},status:\"error\"});},Math.random()*500+1000);}}});}},{key:\"deleteProject\",value:function deleteProject(id,index){return new Promise(function(resolve,reject){var users;var found=-1;if(window.localStorage.getItem(\"userData\")!==null){users=JSON.parse(String(window.localStorage.getItem(\"userData\")));}for(var i=0;i<users.length;i++){if(users[i].id===id){found=i;break;}}if(found===-1){setTimeout(function(){resolve({data:{message:\"Could not find user\"},status:\"error\"});},Math.random()*500+1000);}else{users[found].projects.splice(index,1);window.localStorage.setItem(\"userData\",JSON.stringify(users));setTimeout(function(){resolve({data:{message:users[found]},status:\"success\"});},Math.random()*500+1000);}});}}]);return API;}();export{API as default};","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/dataLayer/api.ts"],"names":["v4","uuidv4","checkPassword","pass","confirm","test","length","API","formValues","userID","password","confirmPassword","user","username","email","grabData","window","localStorage","getItem","JSON","stringify","oldData","parse","hashedPassword","btoa","push","id","pfp","process","env","PUBLIC_URL","projects","setItem","Promise","resolve","reject","setTimeout","data","status","Math","random","users","String","i","message","oldPass","confirmUsername","found","uuid","oldPassword","link","console","log","title","unshift","index","splice"],"mappings":"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","sourcesContent":["import { SignUpFormValues } from \"../components/public/signUp\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ntype APIResponse = {\r\n    data?: any,\r\n    status: string;\r\n}\r\n\r\nexport function checkPassword(pass: string, confirm: string)\r\n{\r\n    return /\\S/.test(pass) && /\\d/.test(pass) && /[a-z]/i.test(pass) && pass.length > 7 && pass === confirm;\r\n}\r\n\r\nexport default class API\r\n{\r\n    static signUp(formValues: SignUpFormValues): Promise<APIResponse>\r\n    {\r\n        const userID = uuidv4();\r\n        const { password, confirmPassword, ...user } = formValues;\r\n        if (user.username && user.email && password && checkPassword(password, confirmPassword))\r\n        {\r\n            let grabData = window.localStorage.getItem(\"userData\");\r\n            if (!grabData)\r\n            {\r\n                grabData = JSON.stringify([]);\r\n            }\r\n            let oldData: any = JSON.parse(grabData);\r\n            const hashedPassword = btoa(password + userID);\r\n            oldData.push({ id: userID, ...user, pfp: process.env.PUBLIC_URL + '/images/defaultpfp.png', pass: hashedPassword, projects: [] });\r\n            window.localStorage.setItem(\"userData\", JSON.stringify(oldData));\r\n            return new Promise((resolve: Function, reject: Function) =>\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data: user,\r\n                        status: \"success\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            });\r\n        }\r\n        else if (!user.username)\r\n        {\r\n            return new Promise((resolve: Function, reject: Function) =>\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data: \"Missing Username\",\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            });\r\n        }\r\n        else if (!user.email)\r\n        {\r\n            return new Promise((resolve: Function, reject: Function) =>\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data: \"Missing Email\",\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            });\r\n        }\r\n        return new Promise((resolve: Function, reject: Function) =>\r\n        {\r\n            setTimeout(() =>\r\n            {\r\n                resolve({\r\n                    data: \"Invalid Password. (8+ characters, no spaces, at least 1 number and 1 letter)\",\r\n                    status: \"error\"\r\n                });\r\n            }, Math.random() * 500 + 1000)\r\n        });\r\n    }\r\n    static login(username: string, password: string)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            let users: any;\r\n            if (window.localStorage.getItem(\"userData\") !== null)\r\n            {\r\n                users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n            }\r\n\r\n            for (let i = 0; i < users.length; i++)\r\n            {\r\n                if (users[i].username === username && users[i].pass === btoa(password + users[i].id))\r\n                {\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data: users[i],\r\n                            status: \"success\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n            }\r\n            setTimeout(() =>\r\n            {\r\n                resolve({\r\n                    data:\r\n                        { message: \"Could not find user or invalid credentials\" },\r\n                    status: \"error\"\r\n                });\r\n            }, Math.random() * 500 + 1000)\r\n        });\r\n    }\r\n    static changeUsername(oldPass: string, username: string, confirmUsername: string)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            if (username === confirmUsername)\r\n            {\r\n                let users: any;\r\n                let found = -1;\r\n                if (window.localStorage.getItem(\"userData\") !== null)\r\n                {\r\n                    users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n                }\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    if (users[i].pass === oldPass)\r\n                    {\r\n                        found = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (found === -1)\r\n                {\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: \"Could not find user\" },\r\n                            status: \"error\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n                else\r\n                {\r\n                    users[found].username = username;\r\n                    window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: users[found] },\r\n                            status: \"success\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: \"Usernames do not match\" },\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n        })\r\n    }\r\n    static changePassword(uuid: string, oldPassword: string, password: string, confirmPassword: string)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            if (checkPassword(password, confirmPassword))\r\n            {\r\n                let users: any;\r\n                let found = -1;\r\n                if (window.localStorage.getItem(\"userData\") !== null)\r\n                {\r\n                    users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n                }\r\n                for (let i = 0; i < users.length; i++)\r\n                {\r\n                    if (users[i].id === uuid)\r\n                    {\r\n                        found = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (found === -1)\r\n                {\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: \"Could not find user\" },\r\n                            status: \"error\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n                else\r\n                {\r\n                    if (btoa(oldPassword + uuid) === users[found].pass)\r\n                    {\r\n                        users[found].pass = btoa(password + uuid);\r\n                        window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                        setTimeout(() =>\r\n                        {\r\n                            resolve({\r\n                                data:\r\n                                    { message: users[found] },\r\n                                status: \"success\"\r\n                            });\r\n                        }, Math.random() * 500 + 1000)\r\n                    }\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: \"Could not change password\" },\r\n                            status: \"error\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n            }\r\n            else\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: \"Password does not match confirmation.\" },\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n        })\r\n    }\r\n    static changePFP(id: string, link: string)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            let users: any;\r\n            let found = -1;\r\n            if (window.localStorage.getItem(\"userData\") !== null)\r\n            {\r\n                users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n            }\r\n            for (let i = 0; i < users.length; i++)\r\n            {\r\n                if (users[i].id === id)\r\n                {\r\n                    found = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === -1)\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: \"Could not find user\" },\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n            else\r\n            {\r\n                console.log(link);\r\n                if (link === \"\")\r\n                {\r\n                    users[found].pfp = process.env.PUBLIC_URL + '/images/defaultpfp.png';\r\n                    window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: users[found] },\r\n                            status: \"success\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n                else\r\n                {\r\n                    users[found].pfp = link;\r\n                    window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: users[found] },\r\n                            status: \"success\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    static newProject(id: string, title: string)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            let users: any;\r\n            let found = -1;\r\n            if (window.localStorage.getItem(\"userData\") !== null)\r\n            {\r\n                users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n            }\r\n            for (let i = 0; i < users.length; i++)\r\n            {\r\n                if (users[i].id === id)\r\n                {\r\n                    found = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === -1)\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: \"Could not find user\" },\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n            else\r\n            {\r\n                if (title)\r\n                {\r\n                    users[found].projects.unshift({ title: title });\r\n                    window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: users[found] },\r\n                            status: \"success\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n                else\r\n                {\r\n                    setTimeout(() =>\r\n                    {\r\n                        resolve({\r\n                            data:\r\n                                { message: \"Missing title\" },\r\n                            status: \"error\"\r\n                        });\r\n                    }, Math.random() * 500 + 1000)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    static deleteProject(id: string, index: number)\r\n    {\r\n        return new Promise<APIResponse>((resolve: Function, reject: Function) =>\r\n        {\r\n            let users: any;\r\n            let found = -1;\r\n            if (window.localStorage.getItem(\"userData\") !== null)\r\n            {\r\n                users = JSON.parse(String(window.localStorage.getItem(\"userData\")));\r\n            }\r\n            for (let i = 0; i < users.length; i++)\r\n            {\r\n                if (users[i].id === id)\r\n                {\r\n                    found = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === -1)\r\n            {\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: \"Could not find user\" },\r\n                        status: \"error\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n            else\r\n            {\r\n                users[found].projects.splice(index, 1);\r\n                window.localStorage.setItem(\"userData\", JSON.stringify(users));\r\n                setTimeout(() =>\r\n                {\r\n                    resolve({\r\n                        data:\r\n                            { message: users[found] },\r\n                        status: \"success\"\r\n                    });\r\n                }, Math.random() * 500 + 1000)\r\n            }\r\n\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}