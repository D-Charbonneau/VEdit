{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createContext,useMemo,useState}from\"react\";import{useNavigate}from\"react-router\";import API from\"../dataLayer/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export var GlobalContext=/*#__PURE__*/createContext({state:{loggedIn:false}});export function GlobalContextProvider(_ref){var children=_ref.children;var _useState=useState({loggedIn:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var navigate=useNavigate();var handleDataChange=function handleDataChange(user){setState({loggedIn:state.loggedIn,user:user});};var handleLogIn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(formValues){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(formValues.username&&formValues.password)){_context.next=5;break;}_context.next=3;return API.login(formValues.username,formValues.password);case 3:result=_context.sent;if(result.status===\"success\"){setState({loggedIn:true,user:result.data});navigate(\"/projects\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleLogIn(_x){return _ref2.apply(this,arguments);};}();var handleLogOut=function handleLogOut(){setState({loggedIn:false});};var ProviderObj=useMemo(function(){return{state:state,onLogin:handleLogIn,onLogout:handleLogOut,refreshData:handleDataChange};},[state]);return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:ProviderObj,children:children});}","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/contexts/globalContext.tsx"],"names":["createContext","useMemo","useState","useNavigate","API","GlobalContext","state","loggedIn","GlobalContextProvider","children","setState","navigate","handleDataChange","user","handleLogIn","formValues","username","password","login","result","status","data","handleLogOut","ProviderObj","onLogin","onLogout","refreshData"],"mappings":"sXAAA,OAASA,aAAT,CAAmCC,OAAnC,CAA4CC,QAA5C,KAA4D,OAA5D,CACA,OAASC,WAAT,KAA4B,cAA5B,CAEA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,C,2CA0BA,MAAO,IAAMC,CAAAA,aAAa,cAAGL,aAAa,CAAgB,CAAEM,KAAK,CAAE,CAAEC,QAAQ,CAAE,KAAZ,CAAT,CAAhB,CAAnC,CAEP,MAAO,SAASC,CAAAA,qBAAT,MACP,IADwCC,CAAAA,QACxC,MADwCA,QACxC,CACI,cAA0BP,QAAQ,CAAc,CAAEK,QAAQ,CAAE,KAAZ,CAAd,CAAlC,wCAAOD,KAAP,eAAcI,QAAd,eACA,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CACzB,CACIH,QAAQ,CAAC,CAAEH,QAAQ,CAAED,KAAK,CAACC,QAAlB,CAA4BM,IAAI,CAAEA,IAAlC,CAAD,CAAR,CACH,CAHD,CAKA,GAAMC,CAAAA,WAAW,2FAAG,iBAAOC,UAAP,kIAEZA,UAAU,CAACC,QAAX,EAAuBD,UAAU,CAACE,QAFtB,gDAISb,CAAAA,GAAG,CAACc,KAAJ,CAAUH,UAAU,CAACC,QAArB,CAA+BD,UAAU,CAACE,QAA1C,CAJT,QAINE,MAJM,eAKZ,GAAIA,MAAM,CAACC,MAAP,GAAkB,SAAtB,CACA,CACIV,QAAQ,CAAC,CAAEH,QAAQ,CAAE,IAAZ,CAAkBM,IAAI,CAAEM,MAAM,CAACE,IAA/B,CAAD,CAAR,CACAV,QAAQ,CAAC,WAAD,CAAR,CACH,CATW,sDAAH,kBAAXG,CAAAA,WAAW,6CAAjB,CAaA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EACrB,CACIZ,QAAQ,CAAC,CAAEH,QAAQ,CAAE,KAAZ,CAAD,CAAR,CACH,CAHD,CAKA,GAAMgB,CAAAA,WAAW,CAAGtB,OAAO,CAAC,iBAAO,CAC/BK,KAAK,CAALA,KAD+B,CAE/BkB,OAAO,CAAEV,WAFsB,CAG/BW,QAAQ,CAAEH,YAHqB,CAI/BI,WAAW,CAAEd,gBAJkB,CAAP,EAAD,CAKvB,CAACN,KAAD,CALuB,CAA3B,CAOA,mBACI,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAEiB,WAA/B,UACKd,QADL,EADJ,CAIH","sourcesContent":["import { createContext, ReactNode, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { LoginFormValues } from \"../components/public/login\";\r\nimport API from \"../dataLayer/api\";\r\n\r\ntype User = {\r\n    email: string;\r\n    id: string;\r\n    pass: string;\r\n    username: string;\r\n    pfp: string;\r\n    projects: Array<{ title: string }>;\r\n}\r\n\r\ntype GlobalState = {\r\n    loggedIn: boolean;\r\n    user?: User;\r\n}\r\n\r\ntype ProviderState = {\r\n    state: GlobalState;\r\n    onLogin?: (formValues: LoginFormValues) => any;\r\n    onLogout?: () => void;\r\n    refreshData?: (user: User) => void;\r\n}\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n}\r\nexport const GlobalContext = createContext<ProviderState>({ state: { loggedIn: false } });\r\n\r\nexport function GlobalContextProvider({ children }: Props)\r\n{\r\n    const [state, setState] = useState<GlobalState>({ loggedIn: false })\r\n    const navigate = useNavigate();\r\n\r\n    const handleDataChange = (user: User) =>\r\n    {\r\n        setState({ loggedIn: state.loggedIn, user: user });\r\n    }\r\n\r\n    const handleLogIn = async (formValues: LoginFormValues) =>\r\n    {\r\n        if (formValues.username && formValues.password)\r\n        {\r\n            const result = await API.login(formValues.username, formValues.password);\r\n            if (result.status === \"success\")\r\n            {\r\n                setState({ loggedIn: true, user: result.data });\r\n                navigate(\"/projects\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleLogOut = () =>\r\n    {\r\n        setState({ loggedIn: false });\r\n    }\r\n\r\n    const ProviderObj = useMemo(() => ({\r\n        state,\r\n        onLogin: handleLogIn,\r\n        onLogout: handleLogOut,\r\n        refreshData: handleDataChange\r\n    }), [state])\r\n\r\n    return (\r\n        <GlobalContext.Provider value={ProviderObj}>\r\n            {children}\r\n        </GlobalContext.Provider>)\r\n}"]},"metadata":{},"sourceType":"module"}