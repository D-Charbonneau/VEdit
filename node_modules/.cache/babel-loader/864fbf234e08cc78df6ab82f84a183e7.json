{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useForm(defaultValues, onSuccess) {\n  _s();\n\n  const [formValues, setFormValues] = useState(defaultValues);\n  return {\n    formProps: () => {\n      return;\n\n      onSubmit: () => {\n        onSuccess(formValues);\n      };\n    },\n    getFieldProps: fieldName => {\n      return {\n        onChange: _ref => {\n          let {\n            target: {\n              name,\n              value\n            }\n          } = _ref;\n          setFormValues({ ...formValues,\n            [name]: value\n          });\n        },\n        name: fieldName\n      };\n    }\n  };\n}\n\n_s(useForm, \"qHqjvpwQwhBFUta/2bL8yfkaeqM=\");","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/hooks/useForm.ts"],"names":["useState","useForm","defaultValues","onSuccess","formValues","setFormValues","formProps","onSubmit","getFieldProps","fieldName","onChange","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,OAAT,CAAoBC,aAApB,EAAsCC,SAAtC,EAAsE;AAAA;;AACzE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAIE,aAAJ,CAA5C;AACA,SAAO;AACHI,IAAAA,SAAS,EAAE,MAAM;AACb;;AACAC,MAAAA,QAAQ,EAAE,MAAM;AACZJ,QAAAA,SAAS,CAACC,UAAD,CAAT;AACH,OAFS;AAGb,KANE;AAOHI,IAAAA,aAAa,EAAGC,SAAD,IAAuB;AAClC,aAAO;AACHC,QAAAA,QAAQ,EAAE,QAAsC;AAAA,cAArC;AAAEC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAF;AAAQC,cAAAA;AAAR;AAAV,WAAqC;AAC5CR,UAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,aAACQ,IAAD,GAAQC;AAAzB,WAAD,CAAb;AACH,SAHE;AAIHD,QAAAA,IAAI,EAAEH;AAJH,OAAP;AAMH;AAdE,GAAP;AAgBH;;GAlBeR,O","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useForm<T>(defaultValues: T, onSuccess: (values: T) => void) {\r\n    const [formValues, setFormValues] = useState<T>(defaultValues);\r\n    return {\r\n        formProps: () => {\r\n            return\r\n            onSubmit: () => {\r\n                onSuccess(formValues);\r\n            }\r\n        },\r\n        getFieldProps: (fieldName: string) => {\r\n            return {\r\n                onChange: ({ target: { name, value } }: any) => {\r\n                    setFormValues({ ...formValues, [name]: value })\r\n                },\r\n                name: fieldName\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}