{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\src\\\\views\\\\protected\\\\account.view.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Account } from \"../../components/protected/account\";\nimport { GlobalContext } from \"../../contexts/globalContext\";\nimport API from \"../../dataLayer/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AccountView() {\n  _s();\n\n  const state = useContext(GlobalContext);\n\n  const handleUsernameChange = async values => {\n    var _state$state$user;\n\n    if ((_state$state$user = state.state.user) !== null && _state$state$user !== void 0 && _state$state$user.pass) {\n      var _state$state$user2;\n\n      let result = await API.changeUsername((_state$state$user2 = state.state.user) === null || _state$state$user2 === void 0 ? void 0 : _state$state$user2.pass, values.username, values.confirmusername);\n\n      if (result.status === \"success\" && state.refreshData !== undefined) {\n        state.refreshData(result.data.message);\n      }\n    }\n  };\n\n  const handlePasswordChange = async values => {\n    var _state$state$user3;\n\n    if ((_state$state$user3 = state.state.user) !== null && _state$state$user3 !== void 0 && _state$state$user3.id) {\n      var _state$state$user4;\n\n      let result = await API.changePassword((_state$state$user4 = state.state.user) === null || _state$state$user4 === void 0 ? void 0 : _state$state$user4.id, values.oldpassword, values.password, values.confirmpassword);\n\n      if (result.status === \"success\" && state.refreshData !== undefined) {\n        state.refreshData(result.data.message);\n      }\n    }\n  };\n\n  const handlePFPChange = async values => {\n    var _state$state$user5;\n\n    if ((_state$state$user5 = state.state.user) !== null && _state$state$user5 !== void 0 && _state$state$user5.id) {\n      var _state$state$user6;\n\n      let result = await API.changePFP((_state$state$user6 = state.state.user) === null || _state$state$user6 === void 0 ? void 0 : _state$state$user6.id, values.link);\n\n      if (result.status === \"success\" && state.refreshData !== undefined) {\n        state.refreshData(result.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Account, {\n    usernameHandler: handleUsernameChange,\n    passwordHandler: handlePasswordChange,\n    pfpHandler: handlePFPChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AccountView, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\n_c = AccountView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountView\");","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/views/protected/account.view.tsx"],"names":["useContext","Account","GlobalContext","API","AccountView","state","handleUsernameChange","values","user","pass","result","changeUsername","username","confirmusername","status","refreshData","undefined","data","message","handlePasswordChange","id","changePassword","oldpassword","password","confirmpassword","handlePFPChange","changePFP","link"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAiG,oCAAjG;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,OAAO,SAASC,WAAT,GACP;AAAA;;AACI,QAAMC,KAAK,GAAGL,UAAU,CAACE,aAAD,CAAxB;;AACA,QAAMI,oBAAoB,GAAG,MAAOC,MAAP,IAC7B;AAAA;;AACI,6BAAIF,KAAK,CAACA,KAAN,CAAYG,IAAhB,8CAAI,kBAAkBC,IAAtB,EACA;AAAA;;AACI,UAAIC,MAAM,GAAG,MAAMP,GAAG,CAACQ,cAAJ,uBAAmBN,KAAK,CAACA,KAAN,CAAYG,IAA/B,uDAAmB,mBAAkBC,IAArC,EAA2CF,MAAM,CAACK,QAAlD,EAA4DL,MAAM,CAACM,eAAnE,CAAnB;;AACA,UAAIH,MAAM,CAACI,MAAP,KAAkB,SAAlB,IAA+BT,KAAK,CAACU,WAAN,KAAsBC,SAAzD,EACA;AACIX,QAAAA,KAAK,CAACU,WAAN,CAAkBL,MAAM,CAACO,IAAP,CAAYC,OAA9B;AACH;AACJ;AACJ,GAVD;;AAYA,QAAMC,oBAAoB,GAAG,MAAOZ,MAAP,IAC7B;AAAA;;AACI,8BAAIF,KAAK,CAACA,KAAN,CAAYG,IAAhB,+CAAI,mBAAkBY,EAAtB,EACA;AAAA;;AACI,UAAIV,MAAM,GAAG,MAAMP,GAAG,CAACkB,cAAJ,uBAAmBhB,KAAK,CAACA,KAAN,CAAYG,IAA/B,uDAAmB,mBAAkBY,EAArC,EAAyCb,MAAM,CAACe,WAAhD,EAA6Df,MAAM,CAACgB,QAApE,EAA8EhB,MAAM,CAACiB,eAArF,CAAnB;;AACA,UAAId,MAAM,CAACI,MAAP,KAAkB,SAAlB,IAA+BT,KAAK,CAACU,WAAN,KAAsBC,SAAzD,EACA;AACIX,QAAAA,KAAK,CAACU,WAAN,CAAkBL,MAAM,CAACO,IAAP,CAAYC,OAA9B;AACH;AACJ;AACJ,GAVD;;AAYA,QAAMO,eAAe,GAAG,MAAOlB,MAAP,IACxB;AAAA;;AACI,8BAAIF,KAAK,CAACA,KAAN,CAAYG,IAAhB,+CAAI,mBAAkBY,EAAtB,EACA;AAAA;;AACI,UAAIV,MAAM,GAAG,MAAMP,GAAG,CAACuB,SAAJ,uBAAcrB,KAAK,CAACA,KAAN,CAAYG,IAA1B,uDAAc,mBAAkBY,EAAhC,EAAoCb,MAAM,CAACoB,IAA3C,CAAnB;;AACA,UAAIjB,MAAM,CAACI,MAAP,KAAkB,SAAlB,IAA+BT,KAAK,CAACU,WAAN,KAAsBC,SAAzD,EACA;AACIX,QAAAA,KAAK,CAACU,WAAN,CAAkBL,MAAM,CAACO,IAAP,CAAYC,OAA9B;AACH;AACJ;AACJ,GAVD;;AAYA,sBAAO,QAAC,OAAD;AAAS,IAAA,eAAe,EAAEZ,oBAA1B;AAAgD,IAAA,eAAe,EAAEa,oBAAjE;AAAuF,IAAA,UAAU,EAAEM;AAAnG;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAxCerB,W;;KAAAA,W","sourcesContent":["import { useContext } from \"react\";\r\nimport { Account, PasswordChangeFormValues, PFPChangeFormValues, UsernameChangeFormValues } from \"../../components/protected/account\";\r\nimport { GlobalContext } from \"../../contexts/globalContext\";\r\nimport API from \"../../dataLayer/api\";\r\n\r\nexport function AccountView()\r\n{\r\n    const state = useContext(GlobalContext);\r\n    const handleUsernameChange = async (values: UsernameChangeFormValues) =>\r\n    {\r\n        if (state.state.user?.pass)\r\n        {\r\n            let result = await API.changeUsername(state.state.user?.pass, values.username, values.confirmusername);\r\n            if (result.status === \"success\" && state.refreshData !== undefined)\r\n            {\r\n                state.refreshData(result.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = async (values: PasswordChangeFormValues) =>\r\n    {\r\n        if (state.state.user?.id)\r\n        {\r\n            let result = await API.changePassword(state.state.user?.id, values.oldpassword, values.password, values.confirmpassword);\r\n            if (result.status === \"success\" && state.refreshData !== undefined)\r\n            {\r\n                state.refreshData(result.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePFPChange = async (values: PFPChangeFormValues) =>\r\n    {\r\n        if (state.state.user?.id)\r\n        {\r\n            let result = await API.changePFP(state.state.user?.id, values.link);\r\n            if (result.status === \"success\" && state.refreshData !== undefined)\r\n            {\r\n                state.refreshData(result.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    return <Account usernameHandler={handleUsernameChange} passwordHandler={handlePasswordChange} pfpHandler={handlePFPChange} />;\r\n}"]},"metadata":{},"sourceType":"module"}