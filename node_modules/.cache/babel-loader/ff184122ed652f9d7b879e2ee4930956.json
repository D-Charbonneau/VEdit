{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\src\\\\contexts\\\\globalContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport API from \"../dataLayer/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext({\n  state: {\n    loggedIn: false\n  }\n});\nexport function GlobalContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState({\n    loggedIn: false\n  });\n\n  const handleLogIn = async _ref2 => {\n    let {\n      username,\n      password\n    } = _ref2;\n\n    if (username && password) {\n      const result = await API.login(username, password);\n      setState({\n        loggedIn: true\n      });\n    }\n  };\n\n  const handleLogOut = () => {\n    setState({\n      loggedIn: false\n    });\n  };\n\n  const ProviderObj = {\n    state,\n    onLogin: handleLogIn,\n    onLogout: handleLogOut\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: ProviderObj,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GlobalContextProvider, \"58LXjxDXElWvv1aJS8yD6nyYvUA=\");\n\n_c = GlobalContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/contexts/globalContext.tsx"],"names":["createContext","useState","API","GlobalContext","state","loggedIn","GlobalContextProvider","children","setState","handleLogIn","username","password","result","login","handleLogOut","ProviderObj","onLogin","onLogout"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;;AAuBA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAgB;AAAEI,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ;AAAT,CAAhB,CAAnC;AAEP,OAAO,SAASC,qBAAT,OACP;AAAA;;AAAA,MADsC;AAAEC,IAAAA;AAAF,GACtC;AACI,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBP,QAAQ,CAAc;AAAEI,IAAAA,QAAQ,EAAE;AAAZ,GAAd,CAAlC;;AAEA,QAAMI,WAAW,GAAG,eACpB;AAAA,QAD2B;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAC3B;;AACI,QAAID,QAAQ,IAAIC,QAAhB,EACA;AACI,YAAMC,MAAM,GAAG,MAAMV,GAAG,CAACW,KAAJ,CAAUH,QAAV,EAAoBC,QAApB,CAArB;AACAH,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMS,YAAY,GAAG,MACrB;AACIN,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAR;AACH,GAHD;;AAKA,QAAMU,WAAW,GAAG;AAChBX,IAAAA,KADgB;AAEhBY,IAAAA,OAAO,EAAEP,WAFO;AAGhBQ,IAAAA,QAAQ,EAAEH;AAHM,GAApB;AAMA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC,WAA/B;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\nimport { LoginFormValues } from \"../components/public/login\";\r\nimport API from \"../dataLayer/api\";\r\n\r\ntype User = {\r\n    email: string;\r\n    id: string;\r\n    pass: string;\r\n    username: string;\r\n}\r\n\r\ntype GlobalState = {\r\n    loggedIn: boolean;\r\n    user?: User;\r\n}\r\n\r\ntype ProviderState = {\r\n    state: GlobalState;\r\n    onLogin?: (username: string, password: string) => any;\r\n    onLogout?: () => void;\r\n}\r\n\r\ntype Props = {\r\n    children: ReactNode;\r\n}\r\nexport const GlobalContext = createContext<ProviderState>({ state: { loggedIn: false } });\r\n\r\nexport function GlobalContextProvider({ children }: Props)\r\n{\r\n    const [state, setState] = useState<GlobalState>({ loggedIn: false })\r\n\r\n    const handleLogIn = async ({ username, password }: LoginFormValues) =>\r\n    {\r\n        if (username && password)\r\n        {\r\n            const result = await API.login(username, password);\r\n            setState({ loggedIn: true })\r\n        }\r\n    }\r\n\r\n    const handleLogOut = () =>\r\n    {\r\n        setState({ loggedIn: false })\r\n    }\r\n\r\n    const ProviderObj = {\r\n        state,\r\n        onLogin: handleLogIn,\r\n        onLogout: handleLogOut\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={ProviderObj}>\r\n            {children}\r\n            { }\r\n        </GlobalContext.Provider>)\r\n}"]},"metadata":{},"sourceType":"module"}