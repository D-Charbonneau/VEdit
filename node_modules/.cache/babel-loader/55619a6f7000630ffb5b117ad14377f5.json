{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boome\\\\Desktop\\\\vedit\\\\src\\\\views\\\\public\\\\signUp.view.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport API from \"../../dataLayer/api\";\nimport { Container, Message } from \"semantic-ui-react\";\nimport SignUp from \"../../components/public/signUp\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignUpView() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [signupMessage, setSignupMessage] = useState();\n  const navigate = useNavigate();\n\n  const handleSignUp = async values => {\n    return;\n    setLoading(true);\n    const {\n      data,\n      status\n    } = await API.signUp(values);\n\n    if (status === \"success\") {\n      setSuccess(true);\n      setTimeout(navigate, 2000, \"/login\");\n    } else {\n      setSignupMessage(data);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      width: 400,\n      margin: 48\n    },\n    children: [/*#__PURE__*/_jsxDEV(SignUp, {\n      onSuccess: handleSignUp,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), success ? /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      children: \"Thank you for signing up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this) : signupMessage ? /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      children: signupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 98\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpView, \"7Yo7j8SUKL/NW3yKegsXGzm7TsI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpView\");","map":{"version":3,"sources":["C:/Users/boome/Desktop/vedit/src/views/public/signUp.view.tsx"],"names":["useState","API","Container","Message","SignUp","useNavigate","SignUpView","loading","setLoading","success","setSuccess","signupMessage","setSignupMessage","navigate","handleSignUp","values","data","status","signUp","setTimeout","width","margin"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAyC,gCAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,EAAlD;AACA,QAAMa,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,MAAP,IAAoC;AACrD;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMhB,GAAG,CAACiB,MAAJ,CAAWH,MAAX,CAA/B;;AACA,QAAIE,MAAM,KAAK,SAAf,EAA0B;AACtBP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,MAAAA,UAAU,CAACN,QAAD,EAAW,IAAX,EAAiB,QAAjB,CAAV;AACH,KAHD,MAIK;AACDD,MAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACH;;AAEDR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAdD;;AAeA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAlB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEP,YAAnB;AAAiC,MAAA,OAAO,EAAEP;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQE,OAAO,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA0DE,aAAa,gBAAG,QAAE,OAAF;AAAU,MAAA,KAAK,MAAf;AAAA,gBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+C,IAHrI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA7BeL,U;UAIKD,W;;;KAJLC,U","sourcesContent":["import { useState } from \"react\";\r\nimport API from \"../../dataLayer/api\"\r\nimport { Container, Message } from \"semantic-ui-react\";\r\nimport SignUp, { SignUpFormValues } from \"../../components/public/signUp\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport function SignUpView() {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n    const [signupMessage, setSignupMessage] = useState<string | undefined>();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSignUp = async (values: SignUpFormValues) => {\r\n        return \r\n        setLoading(true);\r\n\r\n        const { data, status } = await API.signUp(values);\r\n        if (status === \"success\") {\r\n            setSuccess(true);\r\n            setTimeout(navigate, 2000, \"/login\");\r\n        }\r\n        else {\r\n            setSignupMessage(data);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <Container style={{ width: 400, margin: 48 }}>\r\n            <SignUp onSuccess={handleSignUp} loading={loading} />\r\n            {\r\n                success ? <Message success>Thank you for signing up!</Message> : signupMessage ? < Message error>{signupMessage}</Message> : null\r\n            }\r\n        </Container >\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}